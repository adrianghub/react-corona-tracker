{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/corona.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","cardPopulatedWithInfo","title","description","class","classes","case","map","card","i","Grid","item","component","Card","xs","md","className","cx","key","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","container","spacing","justify","url","fetchData","country","a","mutableUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","text","CountryPicker","changed","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","handleCountryChange","fetchedData","setState","this","image","src","coronaImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8781b005.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1OaV-\",\"card\":\"Cards_card__1PBB9\",\"confirmed\":\"Cards_confirmed__3Hihn\",\"recovered\":\"Cards_recovered__mn-tF\",\"deaths\":\"Cards_deaths__3vEgE\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport classes from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn \"Loading...\";\r\n\t}\r\n\tconst cardInfo = [\r\n\t\t{\r\n\t\t\ttitle: \"Infeced\",\r\n\t\t\tdescription: \"Number of active cases of COVID-19\",\r\n\t\t\tclass: classes.confirmed,\r\n\t\t\tcase: confirmed,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Recovered\",\r\n\t\t\tdescription: \"Number of recovered from COVID-19\",\r\n\t\t\tclass: classes.recovered,\r\n\t\t\tcase: recovered,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Deaths\",\r\n\t\t\tdescription: \"Number of deaths from COVID-19\",\r\n\t\t\tclass: classes.deaths,\r\n\t\t\tcase: deaths,\r\n\t\t},\r\n\t];\r\n\r\n\tconst cardPopulatedWithInfo = cardInfo.map((card, i) => {\r\n\t\tconst cardItem = (\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tcomponent={Card}\r\n\t\t\t\txs={12}\r\n\t\t\t\tmd={3}\r\n\t\t\t\tclassName={cx(classes.card, card.class)}\r\n\t\t\t\tkey={i}\r\n\t\t\t>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t{card.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\tend={card.case.value}\r\n\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\">{card.description}</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t\treturn cardItem;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t{cardPopulatedWithInfo}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet mutableUrl = url;\r\n\r\n\tif (country) {\r\n\t\tmutableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { confirmed, recovered, deaths, lastUpdate },\r\n\t\t} = await axios.get(mutableUrl);\r\n\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { countries },\r\n\t\t} = await axios.get(`${url}/countries`);\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport classes from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\tconst [dailyData, setDailyData] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = dailyData.length ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\tlabel: \"Infected\",\r\n\t\t\t\t\t\tborderColor: \"#3333ff\",\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\tlabel: \"Deaths\",\r\n\t\t\t\t\t\tborderColor: \"red\",\r\n\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"People\",\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t\"rgba(0, 0, 255, 0.5)\",\r\n\t\t\t\t\t\t\t\"rgba(0, 255, 0, 0.5)\",\r\n\t\t\t\t\t\t\t`rgba(255, 0, 0, 0.5)`,\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` },\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t{country ? barChart : lineChart}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport classes from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api/index\";\r\n\r\nconst CountryPicker = ({ changed }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedCountries]);\r\n\r\n\treturn (\r\n\t\t<FormControl className={classes.formControl}>\r\n\t\t\t<NativeSelect\r\n\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\tonChange={(e) => changed(e.target.value)}\r\n\t\t\t>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => (\r\n\t\t\t\t\t<option key={i} value={country}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport { fetchData } from \"./api\";\r\n\r\nimport classes from \"./App.module.css\";\r\nimport coronaImage from \"./images/corona.png\";\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: \"\",\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\r\n\t\tthis.setState({ data: fetchedData });\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\r\n\t\tthis.setState({ data: fetchedData, country: country });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.App}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={classes.image}\r\n\t\t\t\t\tsrc={coronaImage}\r\n\t\t\t\t\talt=\"Corona.\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker changed={this.handleCountryChange} />\r\n\t\t\t\t<Chart data={data} country={country} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1YtO9\",\"image\":\"App_image__1xPue\",\"container\":\"App_container__WyIPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__GhGjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__wer3m\"};","module.exports = __webpack_public_path__ + \"static/media/corona.0e00dcbd.png\";"],"sourceRoot":""}